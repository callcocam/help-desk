<?php
/**
 * Created by PhpStorm.
 * User: caltj
 * Date: 16/04/2018
 * Time: 18:26
 */

namespace Client\Filter;


use Client\Entity\Client;
use Core\Filter\AbstractFilter;
use Interop\Container\ContainerInterface;
use Zend\InputFilter\InputFilter;

class ClientFilter extends AbstractFilter
{

    /**
     * FilterInterface constructor.
     * @param ContainerInterface $container
     */
    public function __construct( ContainerInterface $container )
    {
        $this->container = $container;
    }

    public function getInputFilter()
    {
        if (!$this->inputFilter):
            $this->inputFilter = new InputFilter();

            $this->inputFilter->add([
                'name' => 'name',
                'required' => true,
                'filters' => $this->filters(),
                'validators' => [
                    $this->StringLength('Nome Completo'),
                    $this->NotEmpty('Nome Completo'),
                ]
            ]);

            $this->inputFilter->add([
                'name' => 'phone',
                'required' => true,
                'filters' => $this->filters(),
                'validators' => [
                    $this->StringLength('Telefone'),
                    $this->NotEmpty('Telefone'),
                ]
            ]);


            $this->inputFilter->add([
                'name' => 'email',
                'required' => true,
                'filters' => $this->filters(),
                'validators' => [
                    $this->NoRecordExists(Client::class),
                    $this->StringLength('E-Mail'),
                    $this->NotEmpty('E-Mail'),
                ]
            ]);

            $this->inputFilter->add([
                'name' => 'document',
                'required' => true,
                'filters' => $this->filters(),
                'validators' => [
                    $this->NoRecordExists(Client::class, 'document', 'Documento'),
                    $this->StringLength('Documento'),
                    $this->NotEmpty('Documento'),
                ]
            ]);

            $this->inputFilter->add([
                'name' => 'zip',
                'required' => true,
                'filters' => $this->filters(),
                'validators' => [
                    $this->StringLength('Cep'),
                    $this->NotEmpty('Cep'),
                ]
            ]);

            $this->inputFilter->add([
                'name' => 'city',
                'required' => true,
                'filters' => $this->filters(),
                'validators' => [
                    $this->StringLength('Cidade'),
                    $this->NotEmpty('Cidade'),
                ]
            ]);

            $this->inputFilter->add([
                'name' => 'state',
                'required' => true,
                'filters' => $this->filters(),
                'validators' => [
                    $this->StringLength('Estado'),
                    $this->NotEmpty('Estado'),
                ]
            ]);

            $this->inputFilter->add([
                'name' => 'street',
                'required' => true,
                'filters' => $this->filters(),
                'validators' => [
                    $this->StringLength('Endereço'),
                    $this->NotEmpty('Endereço'),
                ]
            ]);

            $this->inputFilter->add([
                'name' => 'district',
                'required' => true,
                'filters' => $this->filters(),
                'validators' => [
                    $this->StringLength('Bairro'),
                    $this->NotEmpty('Bairro'),
                ]
            ]);

            $this->inputFilter->add([
                'name' => 'number',
                'required' => true,
                'filters' => $this->filters(),
                'validators' => [
                    $this->StringLength('Numero'),
                    $this->NotEmpty('Numero'),
                ]
            ]);

            $this->inputFilter->add([
                'name' => 'password',
                'required' => true,
                'filters' => $this->filters(),
                'validators' => [
                    $this->StringLength('Senha'),
                    $this->NotEmpty('Senha'),
                ]
            ]);
        endif;
        return parent::getInputFilter(); // TODO: Change the autogenerated stub
    }
}